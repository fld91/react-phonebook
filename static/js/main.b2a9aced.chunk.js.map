{"version":3,"sources":["components/Contactcard.js","actions/actions.js","components/Allcontacts.js","components/Recent.js","components/Favorite.js","reducer/index.js","reducer/allContactReducer.js","reducer/addContactReducer.js","reducer/addRecent.js","components/addcontactmodal.js","App.js","reportWebVitals.js","index.js"],"names":["styles","container","display","height","backgroundColor","margin","borderRadius","padding","infoContainer","flex","mobile","fontSize","stringToColor","string","i","hash","length","charCodeAt","color","toString","substr","Contactcard","props","name","dispatch","useDispatch","style","Avatar","sx","bgcolor","children","split","Rating","value","isFav","max","onChange","event","newValue","type","payload","id","IconButton","onClick","Allcontacts","contacts","useSelector","state","allContacts","map","element","Recent","recent","recentContact","reverse","console","log","currid","currcontact","forEach","Favorite","allReducers","combineReducers","email","action","copystate","index","addContact","maxSizeRecent","newstate","shift","push","position","top","left","transform","width","textAlign","boxShadow","p","AddContactModal","React","open","setOpen","handleClose","data","SpeedDial","ariaLabel","bottom","right","icon","SpeedDialIcon","Modal","onClose","Box","TextField","label","variant","e","target","Switch","Button","store","createStore","SimpleBottomNavigation","setValue","BottomNavigation","showLabels","BottomNavigationAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a9aced.chunk.js","sourcesContent":["import React from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport Rating from '@mui/material/Rating';\nimport { useDispatch } from 'react-redux';\nimport { addRecent, toggle_fav } from '../actions/actions';\nimport IconButton from '@mui/material/IconButton';\nimport Phone from '@mui/icons-material/Phone';\nimport { border, borderRadius } from '@mui/system';\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        height: \"50px\",\n        backgroundColor: \"#5584AC\",\n        margin: \"2px\",\n        borderRadius: \"5px\",\n        padding: \"2px\"\n    },\n    infoContainer: {\n        flex: 1,\n\n    },\n    mobile: {\n        fontSize: \"14px\",\n\n    }\n\n}\nfunction stringToColor(string) {\n    let hash = 0;\n    let i;\n    \n\n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n    return color;\n}\n\nfunction stringAvatar(name) {\n    return {\n        sx: {\n            bgcolor: stringToColor(name),\n        },\n        children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    };\n}\n\nfunction Contactcard(props) {\n    const dispatch = useDispatch();\n    return (\n        <div style={styles.container}>\n            <div>\n                <Avatar {...stringAvatar(props.name)} />\n            </div>\n            <div style={styles.infoContainer}>\n                {props.name}\n                <br />\n                <span style={styles.mobile}>+91 {props.mobile}</span>\n            </div>\n            <div>\n                <Rating\n                    name=\"simple-controlled\"\n                    value={props.isFav}\n                    max={1}\n                    onChange={(event, newValue) => {\n                        //setValue(newValue);\n                        dispatch(toggle_fav(props.id))\n                    }} />\n\n\n            </div>\n            <IconButton\n                onClick={() => {\n                    dispatch(addRecent(props.id))\n                }\n                }><Phone /></IconButton>\n        </div>\n    )\n}\n\nexport default Contactcard\n","export  function new_contact (contact){\n    return{\n        type:\"NEW_CONTACT\",\n        payload:contact\n    }\n\n}\nexport  function toggle_fav (id){\n    return{\n        type:\"TOGGLE_FAV\",\n        payload:id\n    }\n\n}\nexport  function changeName (name){\n    return{\n        type:\"CHANGE_NAME\",\n        payload:name\n    }\n\n}\nexport  function changeMobile  (mobile){\n    return{\n        type:\"CHANGE_MOBILE\",\n        payload:mobile\n    }\n\n}\nexport  function  changeEmail(email){\n    return{\n        type:\"CHANGE_EMAIL\",\n        payload:email\n    }\n\n}\nexport  function  addRecent(id){\n    return{\n        type:\"ADD_RECENT\",\n        payload:id\n    }\n\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Contactcard from './Contactcard'\n\n\n\nfunction Allcontacts() {\n    const contacts = useSelector(state => state.allContacts)\n    \n    return (\n        <div>\n            {\n                contacts.map((element) => {\n                    return (\n                        <Contactcard\n                            name={element.name}\n                            mobile={element.mobile}\n                            isFav={element.isFav?1:0}\n                            id={element.id} \n                        />)\n                })\n            }\n\n\n        </div>\n    )\n}\n\nexport default Allcontacts\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Contactcard from './Contactcard'\n\n\nfunction Recent() {\n    let recent=useSelector(state=>state.recentContact)\n    recent=recent.reverse()\n    const contacts = useSelector(state => state.allContacts)\n    console.log(recent)\n    return (\n        <div>\n            {\n               \n                recent.map(currid=>{\n                    \n                    let currcontact={}\n                    contacts.forEach(element => {\n                        if(currid===element.id)\n                        currcontact=element\n                        \n                    });\n                    return  (<Contactcard\n                    name={currcontact.name}\n                    mobile={currcontact.mobile}\n                    isFav={currcontact.isFav?1:0}\n                    id={currcontact.id} \n                />)\n\n                })\n            }\n            \n        </div>\n    )\n}\n\nexport default Recent\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Contactcard from './Contactcard'\nfunction Favorite() {\n    const contacts = useSelector(state => state.allContacts)\n    return (\n        <div>\n            {\n                contacts.map((element) => {\n                    if(element.isFav===true)\n                    return (\n                        <Contactcard\n                            name={element.name}\n                            mobile={element.mobile}\n                            isFav={element.isFav?1:0}\n                            id={element.id} \n                        />)\n                })\n            }\n            \n        </div>\n    )\n}\n\nexport default Favorite\n\n","import { combineReducers } from 'redux'\nimport { addContactReducer } from './addContactReducer'\nimport { addRecentReducer } from './addRecent'\nimport { allContactReducer } from './allContactReducer'\n\nexport const allReducers = combineReducers({\n    allContacts: allContactReducer,\n    addContact:addContactReducer,\n    recentContact:addRecentReducer\n})\n","export function allContactReducer(state = [\n    {\n        id: 0,\n        name: \"Aer Bert\",\n        mobile: \"123\",\n        email: \"@qwer\",\n        isFav: false\n    }, {\n        id: 1,\n        name: \"Rohit Sharma\",\n        mobile: \"9999998999\",\n        email: \"rohit@indiancricketteam.com\",\n        isFav: false\n    },], action) {\n    switch (action.type) {\n        case \"NEW_CONTACT\":\n            return [...state, { ...action.payload, isFav: false, id: (state ? state[state.length - 1].id + 1 : 0) }]\n        case \"TOGGLE_FAV\":\n            let copystate=[...state]\n            state.forEach((element,index)=>{\n                if(element.id===action.payload)\n                {\n                    copystate[index].isFav=!state[index].isFav\n                }\n\n\n            }) \n            \n            return copystate\n        default:\n            return state\n    }\n}","export function addContactReducer(state = { name: '', email: '', mobile: '' }, action) {\n    switch (action.type) {\n        case \"CHANGE_EMAIL\":\n            return {...state,email:action.payload}\n        case \"CHANGE_MOBILE\":\n            return {...state,mobile:action.payload}\n        case \"CHANGE_NAME\":\n            return {...state,name:action.payload}\n        default:\n            return state\n    }\n}","export function addRecentReducer(state = [], action) {\n    const maxSizeRecent=10\n    switch (action.type) {\n        case \"ADD_RECENT\":\n            let newstate=[...state]\n            if(newstate.length===maxSizeRecent){\n                 newstate.shift()\n            }\n            newstate.push(action.payload)\n            return newstate\n        \n        default:\n            return state\n    }\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\n\nimport SpeedDial from '@mui/material/SpeedDial';\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\nimport TextField from '@mui/material/TextField';\nimport Modal from '@mui/material/Modal';\nimport Switch from '@mui/material/Switch';\nimport Button from '@mui/material/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { new_contact,changeEmail,changeMobile,changeName } from '../actions/actions';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    textAlign: \"center\",\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function AddContactModal() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const data = useSelector(state => state.addContact)\n    const dispatch = useDispatch();\n   \n\n    return (\n        <div>\n            <SpeedDial\n                ariaLabel=\"SpeedDial basic example\"\n                sx={{ position: 'absolute', bottom: 16, right: 16 }}\n                icon={<SpeedDialIcon />}\n                onClick={handleOpen}\n            >\n\n            </SpeedDial>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <h2>New Contact</h2>\n                    <TextField id=\"outlined-basic\" label=\"Full name\" variant=\"outlined\" value={data.name} onChange={e=>dispatch(changeName(e.target.value))} />\n                    <br />\n                    <br />\n                    <TextField id=\"outlined-basic\" label=\"Mobile\" variant=\"outlined\" value={data.mobile}  onChange={e=>dispatch(changeMobile(e.target.value))}/>\n                    <br />\n                    <br />\n                    <TextField id=\"outlined-basic\" label=\"email\" variant=\"outlined\" value={data.email} onChange={e=>dispatch(changeEmail(e.target.value))}/>\n                    <br />\n                    Favoriate\n                    <Switch label=\"Favoriate\" />\n                    <br />\n                    <br />\n                    <Button variant=\"contained\"\n                        onClick={() => {\n                            dispatch(new_contact(data))\n                            handleClose()\n                        }}>Save Contact</Button>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n","\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Allcontacts from './components/Allcontacts';\nimport Recent from './components/Recent';\nimport Favorite from './components/Favorite';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { allReducers } from './reducer';\nimport AddContactModal from './components/addcontactmodal';\n\n\n\nconst store= createStore(\n  allReducers\n)\nexport default function SimpleBottomNavigation() {\n  const [value, setValue] = React.useState(1);\n\n  return (\n    <Provider store={store}>\n     \n    <Box sx={{ width: 500,margin:\"auto\" }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n      >\n        <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n        <BottomNavigationAction label=\"All Contacts\" icon={<FavoriteIcon />} />\n        <BottomNavigationAction label=\"Favorites\" icon={<LocationOnIcon />} />\n      </BottomNavigation>\n      \n        {(value===0)&&(<Recent/>)}\n         { (value===1)&&(<Allcontacts/>)}\n         { (value===2)&&(<Favorite/>)}\n      <AddContactModal/>       \n      \n    </Box>\n    </Provider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}